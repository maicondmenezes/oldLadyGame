{"version":3,"sources":["components/Square.jsx","components/layout/Board.jsx","components/layout/GameScreen.jsx","components/App.jsx","index.js"],"names":["props","className","onClick","playerSimbol","Board","i","this","squares","renderSquare","React","Component","GameScreen","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","title","handleClick","lines","a","b","c","ReactDom","render","document","getElementById"],"mappings":"sTAGe,G,MAAA,SAAAA,GAAK,OAClB,4BACEC,UAAW,SACXC,QAAYF,EAAME,SAEjBF,EAAMG,gBC6BIC,E,2KAhCAC,GAAI,IAAD,OACd,OACE,kBAAC,EAAD,CACEF,aAAgBG,KAAKN,MAAMO,QAAQF,GACnCH,QAAW,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAMxC,OACE,6BACE,yBAAKJ,UAAY,aACdK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAY,aACdK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAY,aACdK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GA3BTC,IAAMC,WCoFXC,E,kDAlFb,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACXC,QAAS,CAAC,CACRN,QAASO,MAAM,GAAGC,KAAK,QAEzBC,WAAY,EACZC,SAAS,GAPM,E,wDAWPZ,GACV,IAAMQ,EACJP,KAAKM,MAAMC,QAAQK,MAAM,EACzBZ,KAAKM,MAAMI,WAAa,GAGpBT,EADUM,EAAQA,EAAQM,OAAS,GAClBZ,QAAQW,QAC3BE,EAAgBb,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKM,MAAMK,QAAU,IAAM,IACxCX,KAAKe,SAAS,CACZR,QAASA,EAAQS,OAAO,CAAC,CACvBf,QAASA,KAEXS,WAAYH,EAAQM,OACpBF,SAAUX,KAAKM,MAAMK,a,6BAIlBM,GACLjB,KAAKe,SAAS,CACZL,WAAYO,EACZN,QAAUM,EAAO,IAAO,M,+BAInB,IAmBHC,EAnBE,OACAX,EAAUP,KAAKM,MAAMC,QACrBY,EAAUZ,EAAQP,KAAKM,MAAMI,YAC7BU,EAASN,EAAgBK,EAAQlB,SACjCoB,EAAQd,EAAQe,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EACb,cAAgBA,EAChB,cACA,OACE,wBAAIE,IAAKF,GACP,4BACE5B,UAAY,SACZC,QAAS,kBAAM,EAAK8B,OAAOH,KAE1BC,OAWT,OAJEN,EADCE,EACQ,oBAAsBA,EAEtB,mBAAqBpB,KAAKM,MAAMK,QAAU,IAAM,KAGvD,yBAAKhB,UAAU,cACf,yBAAKA,UAAU,SACZK,KAAKN,MAAMiC,OAEd,yBAAKhC,UAAU,SACb,kBAAC,EAAD,CACEM,QAAUkB,EAAQlB,QAClBL,QAAU,SAACG,GAAD,OAAO,EAAK6B,YAAY7B,OAGtC,yBAAKJ,UAAU,UACb,6BAAMuB,GACN,4BAAKG,S,GA7EUlB,IAAMC,WAqF/B,SAASU,EAAgBb,GAWvB,IAVA,IAAM4B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA9B,EAAI,EAAGA,EAAI8B,EAAMhB,OAAQd,IAAK,CAAC,IAAD,cACnB8B,EAAM9B,GADa,GAC9B+B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI/B,EAAQ6B,IACL7B,EAAQ6B,KAAO7B,EAAQ8B,IACvB9B,EAAQ6B,KAAO7B,EAAQ+B,GAC5B,OAAO/B,EAAQ6B,GAGnB,OAAO,KCvGM,eAAApC,GAAK,OAClB,yBAAKC,UAAY,OACf,kBAAC,EAAD,CAAYgC,MAAQ,oB,cCFxBM,EAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.7775e50f.chunk.js","sourcesContent":["import './Square.css'\r\nimport React from 'react'\r\n\r\nexport default props =>\r\n  <button \r\n    className ='square'      \r\n    onClick   ={props.onClick}\r\n  >          \r\n    {props.playerSimbol}\r\n  </button>","import React from 'react'\r\nimport Square from '../Square'\r\n\r\nclass Board extends React.Component {\r\n\r\n  renderSquare(i) {\r\n    return(\r\n      <Square \r\n        playerSimbol = {this.props.squares[i]} \r\n        onClick = {() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n  \r\n  render(){\r\n    return(\r\n      <div>\r\n        <div className = 'board-row'>\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className = 'board-row'>\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className = 'board-row'>\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>    \r\n      </div>    \r\n    );\r\n  }  \r\n}\r\n\r\nexport default Board","import './GameScreen.css'\r\nimport React from 'react'\r\nimport Board from './Board'\r\n\r\nclass GameScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null)\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true\r\n    }\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = \r\n      this.state.history.slice(0, \r\n      this.state.stepNumber + 1\r\n    );\r\n    const current = history[history.length - 1];\r\n    const squares =current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares\r\n      }]),   \r\n      stepNumber: history.length,   \r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? \r\n      'Go to Step ' + move :\r\n      'Go to Begin';\r\n      return (\r\n        <li key={move}>\r\n          <button \r\n            className = 'square' \r\n            onClick={() => this.jumpTo(move)}\r\n          >\r\n            {desc}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n    let status;\r\n    if(winner) {\r\n      status = 'Winner is Player ' + winner;\r\n    } else {\r\n      status = 'Next Player is ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n    return(\r\n        <div className='GameScreen'>\r\n        <div className='Title'>\r\n          {this.props.title}\r\n        </div>\r\n        <div className='Board'>\r\n          <Board \r\n            squares ={current.squares}\r\n            onClick ={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className='Status'>\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GameScreen\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] \r\n        && squares[a] === squares[b] \r\n        && squares[a] === squares[c]){\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}","import './App.css'\r\nimport './Square.css'\r\nimport React from 'react'\r\nimport GameScreen from './layout/GameScreen'\r\n\r\nexport default props => (\r\n  <div className = 'App'>\r\n    <GameScreen title = 'Jogo da Velha' />        \r\n  </div>\r\n)\r\n","import './index.css'\r\nimport App from './components/App'\r\nimport React from 'react'\r\nimport ReactDom from 'react-dom'\r\n\r\nReactDom.render(\r\n  <App />,  \r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}